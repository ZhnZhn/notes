{"version":3,"sources":["../../../../src/flux/column/__test__/reducer.test.js"],"names":["crColumn","fns","state","initialState","columns","_crDnD","droppableId","index","describe","test","expect","undefined","toEqual","cId","newTitle","ca","editColumnTitle","title","stateHide","toggleColumn","isHide","bId","addColumn","removeColumn","id","noteIds","nId","na","addNote","stateWithTask","deleteNote","cFromId","cToId","source","destination","moveNote","draggableId","n1Id","n2Id","state1","state2","withAdd"],"mappings":"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","sourcesContent":["import reducer from '../reducer'\r\nimport ca from '../actions'\r\nimport na from '../../note/actions'\r\nimport fns from '../fns'\r\nimport initialState from '../../initialState'\r\n\r\n\r\nconst crColumn = fns.crColumn;\r\nconst state = initialState.columns;\r\n/*\r\nconst initState = {\r\n  'c-1': {\r\n    id: 'c-1',\r\n    title: 'Topic 1',\r\n    noteIds: [],\r\n    withAdd: true\r\n  },\r\n  'c-2': {\r\n    id: 'c-2',\r\n    title: 'Topic 2',\r\n    noteIds: []\r\n  }\r\n};\r\n*/\r\n\r\nconst _crDnD = (droppableId, index) => ({\r\n  droppableId,\r\n  index\r\n});\r\n\r\ndescribe('reducer column', ()=>{\r\n  test('should init initialState', ()=>{\r\n    expect(reducer(undefined, {})).toEqual(state)\r\n  })\r\n  test('should edit columm title', ()=>{\r\n    const cId = 'c-1', newTitle = 'Column';\r\n    expect(\r\n      reducer(state, ca.editColumnTitle(cId, newTitle))\r\n    ).toEqual({\r\n      ...state,\r\n      [cId]: {\r\n        ...state[cId],\r\n        title: newTitle\r\n      }\r\n    })\r\n  })\r\n  test('should toggle columm, property isHide', ()=>{\r\n    const cId = 'c-1'\r\n    , stateHide = reducer(state, ca.toggleColumn(cId));\r\n    expect(stateHide).toEqual({\r\n      ...state,\r\n      [cId]: {\r\n        ...state[cId],\r\n        isHide: true\r\n      }\r\n    })\r\n    expect(\r\n      reducer(stateHide, ca.toggleColumn(cId))\r\n    ).toEqual({\r\n      ...stateHide,\r\n      [cId]: {\r\n        ...state[cId],\r\n        isHide: false\r\n      }\r\n    })\r\n  })\r\n  test('should add column', ()=>{\r\n    const bId = 'b-1', cId = 'c-3';\r\n    expect(\r\n      reducer(state, ca.addColumn(bId, cId))\r\n    ).toEqual({\r\n      ...state,\r\n      [cId]: crColumn(cId)\r\n    })\r\n  })\r\n  test('should remove column', ()=>{\r\n    const bId = 'b-1', cId = 'c-1';\r\n    expect(\r\n      reducer(state, ca.removeColumn(bId, cId))\r\n    ).toEqual({\r\n      'c-2': {\r\n        id: 'c-2',\r\n        title: 'Topic 2',\r\n        noteIds: []\r\n      }\r\n    })\r\n  })\r\n  test('should add note', ()=>{\r\n    const cId = 'c-1', nId = 'n-1';\r\n    expect(\r\n      reducer(state, na.addNote(cId, nId))\r\n    ).toEqual({\r\n      ...state,\r\n      [cId]: {\r\n        ...state[cId],\r\n        noteIds: [nId, ...state[cId].noteIds]\r\n      }\r\n    })\r\n  })\r\n  test('should delete note', ()=>{\r\n    const cId = 'c-1', nId = 'n-1'\r\n    , stateWithTask = reducer(state, na.addNote(cId, nId));\r\n    expect(\r\n      reducer(stateWithTask, na.deleteNote(cId, nId))\r\n    ).toEqual({\r\n      ...state\r\n    })\r\n  })\r\n  test('should move note between column', ()=>{\r\n    const cFromId = 'c-1' , cToId = 'c-2', nId = 'n-1'\r\n    , source = _crDnD(cFromId, 0)\r\n    , destination = _crDnD(cToId, 0)\r\n    , stateWithTask = reducer(state, na.addNote(cFromId, nId));\r\n    expect(\r\n      reducer(stateWithTask, na.moveNote({\r\n        draggableId: nId, source, destination\r\n      }))\r\n    ).toEqual({\r\n        ...state,\r\n        [cToId]: {\r\n          ...state[cToId],\r\n          noteIds: [ nId ]\r\n        }\r\n     })\r\n  })\r\n  test('should move note between index in column', ()=>{\r\n    const cId = 'c-1', n1Id = 'n-1', n2Id = 'n-2'\r\n    , state1 = reducer(state, na.addNote(cId, n1Id))\r\n    , state2 = reducer(state1, na.addNote(cId, n2Id))\r\n    , source = _crDnD(cId, 1)\r\n    , destination = _crDnD(cId, 0);\r\n    expect(\r\n      reducer(state2, na.moveNote({\r\n        draggableId: n1Id, source, destination\r\n      }))\r\n    ).toEqual({\r\n      ...state,\r\n      [cId]: {\r\n        id: cId,\r\n        title: 'Topic 1',\r\n        noteIds: [n1Id, n2Id],\r\n        withAdd: true\r\n      }\r\n    })\r\n  })\r\n\r\n})\r\n"],"file":"reducer.test.js"}