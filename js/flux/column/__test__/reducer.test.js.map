{"version":3,"file":"reducer.test.js","names":["crColumn","fns","getState","store","dispatch","_selectColums","columns","boardId","Object","keys","boards","describe","test","expect","reducer","undefined","toEqual","initialState","beforeColums","columnId","addColumn","title","editColumnTitle","toBe","noteId_1","addNote","noteIds","noteId_2","moveNote","draggableId","source","droppableId","index","destination","deleteNote","noteId","toggleColumn","isHide","removeColumn"],"sources":["../../../../src/flux/column/__test__/reducer.test.js"],"sourcesContent":["import reducer, { editColumnTitle, toggleColumn } from '../reducer';\r\nimport {\r\n  addColumn,\r\n  removeColumn\r\n} from '../actions';\r\n\r\nimport {\r\n  addNote,\r\n  deleteNote,\r\n  moveNote\r\n} from '../../note/actions';\r\nimport fns from '../fns';\r\n\r\nimport initialState from '../../initialState';\r\nimport store from '../../store';\r\n\r\nconst { crColumn } = fns;\r\n\r\nconst { getState, dispatch } = store;\r\nconst _selectColums = () => getState().columns;\r\n\r\n\r\n/*\r\nconst initState = {\r\n  'c-1': {\r\n    id: 'c-1',\r\n    title: 'Topic 1',\r\n    noteIds: [],\r\n    withAdd: true\r\n  },\r\n  'c-2': {\r\n    id: 'c-2',\r\n    title: 'Topic 2',\r\n    noteIds: []\r\n  }\r\n};\r\n*/\r\n\r\n\r\nconst boardId = Object.keys(getState().boards)[0]\r\n\r\ndescribe('reducer column', ()=>{\r\n  test('should init initialState', ()=>{\r\n    expect(reducer(undefined, {})).toEqual(initialState.columns)\r\n  })\r\n\r\n  test('should handle actions correctly', ()=>{\r\n    const beforeColums = _selectColums();\r\n\r\n    const columnId = dispatch(addColumn({ boardId }));\r\n    expect(_selectColums()).toEqual({\r\n      ...beforeColums,\r\n      [columnId]: crColumn(columnId)\r\n    })\r\n\r\n    const title = \"Test Title\"\r\n    dispatch(editColumnTitle({ columnId, title }))\r\n    expect(_selectColums()[columnId].title).toBe(title)\r\n\r\n    const noteId_1 = dispatch(addNote({ boardId, columnId }))\r\n    expect(_selectColums()[columnId].noteIds).toEqual([noteId_1])\r\n    const noteId_2 = dispatch(addNote({ boardId, columnId }))\r\n    expect(_selectColums()[columnId].noteIds).toEqual([noteId_2, noteId_1])\r\n\r\n    dispatch(moveNote({\r\n      draggableId: noteId_1,\r\n      source: { droppableId: columnId, index: 1 },\r\n      destination: { droppableId: columnId, index: 0 }\r\n    }))\r\n    expect(_selectColums()[columnId].noteIds).toEqual([noteId_1, noteId_2])\r\n\r\n    dispatch(deleteNote({ columnId, noteId: noteId_1 }))\r\n    expect(_selectColums()[columnId].noteIds).toEqual([noteId_2])\r\n    dispatch(deleteNote({ columnId, noteId: noteId_2 }))\r\n    expect(_selectColums()[columnId].noteIds).toEqual([])\r\n\r\n    dispatch(toggleColumn({ columnId }))\r\n    expect(_selectColums()[columnId].isHide).toBe(true)\r\n    dispatch(toggleColumn({ columnId }))\r\n    expect(_selectColums()[columnId].isHide).toBe(false)\r\n\r\n    dispatch(removeColumn({ boardId, columnId }))\r\n    expect(_selectColums()).toEqual(beforeColums)\r\n  })\r\n})\r\n"],"mappings":"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"}