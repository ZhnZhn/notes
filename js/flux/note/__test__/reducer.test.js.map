{"version":3,"sources":["../../../../src/flux/note/__test__/reducer.test.js"],"names":["state","id","title","describe","test","expect","undefined","toEqual","initialState","notes","nId","newTitle","ta","editNoteTitle","newDescr","editNoteDescr","descr","labelsTo","color","editNoteLabels","labels","cId","addNote","deleteNote"],"mappings":"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","sourcesContent":["import reducer from '../reducer'\r\nimport ta from '../actions'\r\nimport initialState from '../../initialState'\r\n\r\nconst state = {\r\n  'n-1': {\r\n    id: 'n-1',\r\n    title: 'Note 1'\r\n  },\r\n  'n-2': {\r\n    id: 'n-2',\r\n    title: 'Note 2'\r\n  }\r\n};\r\n\r\ndescribe('reducer note', () => {\r\n  test('should init to initialState', () => {\r\n    expect(reducer(undefined, {})).toEqual(initialState.notes)\r\n  })\r\n  test('should edit note title', ()=>{\r\n    const nId ='n-1'\r\n    , newTitle = 'Note'\r\n    , state = { [nId]: { id: nId, title: 'Title' }};\r\n    expect(\r\n      reducer(state, ta.editNoteTitle(nId, newTitle))\r\n    ).toEqual({\r\n      [nId]: {\r\n        id: nId,\r\n        title: newTitle\r\n      }\r\n    })\r\n  })\r\n\r\n  test('should edit note descr', ()=>{\r\n    const nId ='n-1', newDescr = 'Note'\r\n    , state = { [nId]: { id: nId, title: 'Title' }}\r\n    expect(\r\n      reducer(state, ta.editNoteDescr(nId, newDescr))\r\n    ).toEqual({\r\n      [nId]: {\r\n        id: nId,\r\n        title: 'Title',\r\n        descr: newDescr\r\n      }\r\n    })\r\n  })\r\n\r\n  test('should set new labels', ()=>{\r\n    const nId ='n-1'\r\n    , labelsTo = [{ id: 'nl-1', title: 'Story', color: 'green'}]\r\n    , state = { [nId]: { id: nId, title: 'Title'}};\r\n    expect(reducer(state, ta.editNoteLabels(\r\n      nId, [], labelsTo, []\r\n    ))).toEqual({\r\n      [nId]: {\r\n        id: nId,\r\n        title: 'Title',\r\n        labels: labelsTo\r\n      }\r\n    })\r\n  })\r\n\r\n  test('should add note', ()=>{\r\n    const cId = 'c-1', nId = 'n-3'\r\n    expect(\r\n      reducer(state, ta.addNote(cId, nId))\r\n    ).toEqual({\r\n      ...state,\r\n      [nId]: {\r\n        id: nId,\r\n        title: 'New Note'\r\n      }\r\n    })\r\n  })\r\n  test('should remove note', ()=>{\r\n    const cId = 'c-1', nId = 'n-1';\r\n    expect(\r\n      reducer(state, ta.deleteNote(cId, nId))\r\n    ).toEqual({\r\n      'n-2': {\r\n        id: 'n-2',\r\n        title: 'Note 2'\r\n      }\r\n    })\r\n  })\r\n})\r\n"],"file":"reducer.test.js"}