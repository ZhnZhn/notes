{"version":3,"sources":["../../../../src/flux/note/__test__/reducer.test.js"],"names":["state","id","title","describe","test","expect","undefined","toEqual","initialState","notes","nId","newTitle","ta","editNoteTitle","cId","addNote","deleteNote"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,QAAQ;AACZ,SAAO;AACLC,QAAI,KADC;AAELC,WAAO;AAFF,GADK;AAKZ,SAAO;AACLD,QAAI,KADC;AAELC,WAAO;AAFF;AALK,CAAd;;AAWAC,SAAS,cAAT,EAAyB,YAAM;AAC7BC,OAAK,6BAAL,EAAoC,YAAM;AACxCC,WAAO,uBAAQC,SAAR,EAAmB,EAAnB,CAAP,EAA+BC,OAA/B,CAAuCC,uBAAaC,KAApD;AACD,GAFD;AAGAL,OAAK,wBAAL,EAA+B,YAAI;AACjC,QAAMM,MAAK,KAAX;AAAA,QAAkBC,WAAW,MAA7B;AACAN,WACE,uBAAQL,KAAR,EAAeY,kBAAGC,aAAH,CAAiBH,GAAjB,EAAsBC,QAAtB,CAAf,CADF,EAEEJ,OAFF,4BAGKP,KAHL,oCAIGU,GAJH,6BAKOV,MAAMU,GAAN,CALP;AAMIR,aAAOS;AANX;AASD,GAXD;AAYAP,OAAK,iBAAL,EAAwB,YAAI;AAC1B,QAAMU,MAAM,KAAZ;AAAA,QAAmBJ,MAAM,KAAzB;AACAL,WACE,uBAAQL,KAAR,EAAeY,kBAAGG,OAAH,CAAWD,GAAX,EAAgBJ,GAAhB,CAAf,CADF,EAEEH,OAFF,4BAGKP,KAHL,oCAIGU,GAJH,EAIS;AACLT,UAAIS,GADC;AAELR,aAAO;AAFF,KAJT;AASD,GAXD;AAYAE,OAAK,oBAAL,EAA2B,YAAI;AAC7B,QAAMU,MAAM,KAAZ;AAAA,QAAmBJ,MAAM,KAAzB;AACAL,WACE,uBAAQL,KAAR,EAAeY,kBAAGI,UAAH,CAAcF,GAAd,EAAmBJ,GAAnB,CAAf,CADF,EAEEH,OAFF,CAEU;AACR,aAAO;AACLN,YAAI,KADC;AAELC,eAAO;AAFF;AADC,KAFV;AAQD,GAVD;AAWD,CAvCD","file":"reducer.test.js","sourcesContent":["import reducer from '../reducer'\r\nimport ta from '../actions'\r\nimport initialState from '../../initialState'\r\n\r\nconst state = {\r\n  'n-1': {\r\n    id: 'n-1',\r\n    title: 'Note 1'\r\n  },\r\n  'n-2': {\r\n    id: 'n-2',\r\n    title: 'Note 2'\r\n  }\r\n};\r\n\r\ndescribe('reducer note', () => {\r\n  test('should init to initialState', () => {\r\n    expect(reducer(undefined, {})).toEqual(initialState.notes)\r\n  })\r\n  test('should edit note title', ()=>{\r\n    const nId ='n-1', newTitle = 'Note'\r\n    expect(\r\n      reducer(state, ta.editNoteTitle(nId, newTitle))\r\n    ).toEqual({\r\n      ...state,\r\n      [nId]: {\r\n        ...state[nId],\r\n        title: newTitle\r\n      }\r\n    })\r\n  })\r\n  test('should add note', ()=>{\r\n    const cId = 'c-1', nId = 'n-3'\r\n    expect(\r\n      reducer(state, ta.addNote(cId, nId))\r\n    ).toEqual({\r\n      ...state,\r\n      [nId]: {\r\n        id: nId,\r\n        title: 'New Note'\r\n      }\r\n    })\r\n  })\r\n  test('should remove note', ()=>{\r\n    const cId = 'c-1', nId = 'n-1';\r\n    expect(\r\n      reducer(state, ta.deleteNote(cId, nId))\r\n    ).toEqual({\r\n      'n-2': {\r\n        id: 'n-2',\r\n        title: 'Note 2'\r\n      }\r\n    })\r\n  })\r\n})\r\n"]}