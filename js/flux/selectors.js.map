{"version":3,"sources":["../../src/flux/selectors.js"],"names":["sApp","app","state","currentBoard","boardId","boardIds","uiTheme","sDrawer","msg","drawerMsg","sBoard","boards","board","columnIds","sNote","notes","sNoteLabel","labels","noteLabels","sColumn","columns","column","columnId","noteIds","selectors","drawer","note"],"mappings":"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","sourcesContent":["// @flow\r\n\r\nexport const sApp = {\r\n  app: (state /*: StoreState */) => state.app || {},\r\n  //state.app.boardId\r\n  currentBoard: (state /*: StoreState */) => sApp\r\n    .app(state).boardId,\r\n  //state.app.boardIds\r\n  boardIds: (state /*: StoreState */) => sApp\r\n    .app(state).boardIds || [],\r\n  //state.app.uiTheme\r\n  uiTheme: (state /*: StoreState */) => sApp\r\n    .app(state).uiTheme\r\n};\r\n\r\nexport const sDrawer = {\r\n  msg: (state /*: StoreState */) => state.drawerMsg || []\r\n};\r\n\r\nexport const sBoard = {\r\n  boards: (state /*: StoreState */) => state.boards || {},\r\n\r\n  //state.boards[state.app.boardId]\r\n  currentBoard: (state /*: StoreState */) => sBoard\r\n    .boards(state)[sApp.currentBoard(state)] || {},\r\n\r\n  //state.boards[id]\r\n  board: (\r\n    state /*: StoreState */,\r\n    boardId /*: string */\r\n  ) => sBoard\r\n    .boards(state)[boardId] || {},\r\n\r\n  //state.boards[boardId].columnIds\r\n  columnIds: (\r\n    state /*: StoreState */,\r\n    boardId /*: string */\r\n  ) => sBoard\r\n    .board(state, boardId).columnIds || [],\r\n\r\n  //state.app.boardIds\r\n  boardIds: (state /*: StoreState */) => sApp.boardIds(state)\r\n};\r\n\r\nexport const sNote = {\r\n  notes: (state /*: StoreState */) => state.notes || {}\r\n};\r\n\r\nexport const sNoteLabel = {\r\n  labels: (state /*: StoreState */ ) => state.noteLabels || {}\r\n}\r\n\r\nexport const sColumn = {\r\n  columns: (state /*: StoreState */) => state.columns || {},\r\n\r\n  //state.columns[columnId]\r\n  column: (\r\n    state /*: StoreState */,\r\n    columnId /*: string */\r\n  ) => sColumn\r\n    .columns(state)[columnId] || {},\r\n\r\n  //state.columns[columnId].noteIds\r\n  noteIds: (\r\n    state /*: StoreState */,\r\n    columnId /*: string */\r\n  ) => sColumn\r\n    .column(state, columnId).noteIds || []\r\n};\r\n\r\nconst selectors = {\r\n  app: sApp,\r\n  drawer: sDrawer,\r\n  board: sBoard,\r\n  note: sNote,\r\n  column: sColumn\r\n};\r\n\r\nexport default selectors\r\n"],"file":"selectors.js"}