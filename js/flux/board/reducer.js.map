{"version":3,"sources":["../../../src/flux/board/reducer.js"],"names":["setInObj","fns","removeProp","filterBy","moveInternal","moveExternal","reducer","state","action","initState","boards","type","ACTION","EDIT_BOARD_TITLE","boardId","title","newBoard","ADD_BOARD","id","columnIds","REMOVE_BOARD","CA","ADD_COLUMN","columnId","oldBoard","REMOVE_COLUMN","MOVE_COLUMN","source","destination","from","droppableId","to"],"mappings":"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","sourcesContent":["import { ACTION } from './actions'\r\nimport { ACTION as CA } from '../column/actions'\r\nimport initState from '../initialState'\r\n\r\nimport fns from '../reducerFns'\r\nimport fDnDMoveFns from '../fDnDMoveFns'\r\n\r\nconst {\r\n  setInObj,\r\n  removeProp,\r\n  filterBy\r\n} = fns;\r\nconst {\r\n  moveInternal,\r\n  moveExternal\r\n} = fDnDMoveFns('columnIds');\r\n\r\n\r\n/*\r\nboards: {\r\n  'b-1': {\r\n    id: 'b-1',\r\n    title: 'Board 1',\r\n    columnIds: ['c-1','c-2']\r\n  }\r\n}\r\n*/\r\n\r\nconst reducer = function (\r\n  state /*: BoardState */=initState.boards,\r\n  action /*: BoardAction */\r\n) /*: BoardState */ {\r\n  switch(action.type){\r\n    case ACTION.EDIT_BOARD_TITLE: {\r\n      const { boardId, title } = action\r\n         , newBoard = {...state[boardId], title };\r\n      return setInObj(state, boardId, newBoard)\r\n    }\r\n    case ACTION.ADD_BOARD: {\r\n      const { boardId } = action;\r\n      return setInObj(state, boardId, {\r\n        id: boardId,\r\n        title: 'New Board',\r\n        columnIds: []\r\n      });\r\n    }\r\n    case ACTION.REMOVE_BOARD: {\r\n      const { boardId } = action;\r\n      return removeProp(state, boardId);\r\n    }\r\n    case CA.ADD_COLUMN: {\r\n      const { boardId, columnId } = action\r\n      , oldBoard = state[boardId]\r\n      , newBoard = {\r\n        ...oldBoard,\r\n        columnIds: [\r\n          ...oldBoard.columnIds\r\n          , columnId\r\n        ]\r\n      }\r\n      return setInObj(state, boardId, newBoard);\r\n    }\r\n    case CA.REMOVE_COLUMN:{\r\n      const { boardId, columnId } = action\r\n      , oldBoard = state[boardId];\r\n      return setInObj(state, boardId, {\r\n        ...oldBoard,\r\n        columnIds: filterBy(oldBoard.columnIds, columnId)\r\n      });\r\n    }\r\n    case CA.MOVE_COLUMN: {\r\n      const { columnId, source, destination } = action\r\n      , from = state[source.droppableId]\r\n      , to = state[destination.droppableId];\r\n      return from === to\r\n        ? moveInternal(state, columnId, source, destination, from)\r\n        : moveExternal(state, columnId, source, destination, from, to);\r\n    }\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer\r\n"],"file":"reducer.js"}