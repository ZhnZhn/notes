{"version":3,"sources":["../../../src/component/zhn-cont/WrapperContainer.jsx"],"names":["WrapperContainer","state","isShow","inits","shows","data","dialogs","currentDialog","_onStore","store","props","getState","modal","type","id","dialogProps","setState","prevState","push","comp","Router","getDialog","_hClose","_renderDialogs","theme","map","dialog","React","createElement","key","onClose","bind","dispatch","TS","createStyle","styleConfig","componentDidMount","unsubscribe","subscribe","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","render","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../style/Dialog.Style'\r\n\r\nimport Router from '../dialogs/modalRouter'\r\nimport WrapperModalDialog from '../zhn-ch/WrapperModalDialog'\r\n\r\nclass WrapperContainer extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      subscribe: PropTypes.func\r\n    })\r\n  }\r\n  */\r\n\r\n  state = {\r\n    isShow : false,\r\n    inits : {},\r\n    shows : {},\r\n    data : {},\r\n    dialogs : [],\r\n    currentDialog : null\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n      .subscribe(this._onStore);\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.state.currentDialog === nextState.currentDialog) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _onStore = () => {\r\n    const { store } = this.props\r\n        , { modal={} } = store.getState()\r\n        , { id:type, data:dialogProps={} } = modal;\r\n    if (type && this.modal !== modal) {\r\n      this.modal = modal\r\n      this.setState(prevState => {\r\n        const { inits, shows, data, dialogs } = prevState;\r\n        if (!inits[type]){\r\n          dialogs.push({ type: type, comp: Router.getDialog(type) })\r\n          inits[type] = true\r\n          shows[type] = true\r\n          data[type] = dialogProps\r\n          return {\r\n            isShow: true,\r\n            currentDialog: type,\r\n            shows,\r\n            data,\r\n            dialogs\r\n          };\r\n        } else {\r\n          shows[type] = true\r\n          data[type] = dialogProps\r\n          return {\r\n            isShow: true,\r\n            currentDialog: type,\r\n            shows,\r\n            data\r\n          };\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  _hClose = (type) => {\r\n    this.setState(prevState => {\r\n      prevState.shows[type] = false\r\n      return {\r\n        isShow: false,\r\n        currentDialog: null,\r\n        shows: prevState.shows\r\n      };\r\n    })\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const { store, theme } = this.props;\r\n    const { shows, data, dialogs } = this.state;\r\n    return dialogs.map(dialog => {\r\n      const { type, comp } = dialog;      \r\n      return React.createElement(comp, {\r\n        key: type,\r\n        isShow: shows[type],\r\n        data: data[type],\r\n        onClose: this._hClose.bind(null, type),\r\n        store: store,\r\n        dispatch: store.dispatch,\r\n        TS: theme.createStyle(styleConfig)\r\n      });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      isShow,\r\n      currentDialog\r\n    } = this.state;\r\n    return (\r\n      <WrapperModalDialog\r\n        isShow={isShow}\r\n        onClose={this._hClose.bind(null, currentDialog)}\r\n      >\r\n        {this._renderDialogs()}\r\n     </WrapperModalDialog>\r\n   );\r\n  }\r\n}\r\n\r\nexport default withTheme(WrapperContainer)\r\n"],"file":"WrapperContainer.js"}