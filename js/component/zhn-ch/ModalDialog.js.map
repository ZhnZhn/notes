{"version":3,"sources":["../../../src/component/zhn-ch/ModalDialog.jsx"],"names":["CL","DIALOG","ACTIONS","SHOWING","HIDING","S","SHOW","display","HIDE","HIDE_POPUP","opacity","transform","ModalDialog","props","_hClickDialog","event","stopPropagation","_refBtClose","n","_btClose","_renderCommandButton","commandButtons","withoutClose","onClose","wasClosing","shouldComponentUpdate","nextProps","nextState","isNotUpdate","focusBtClose","isFocusClose","focus","componentDidMount","componentDidUpdate","prevProps","prevState","timeout","isShow","setTimeout","setState","render","className","style","isWithButton","caption","captionStyle","children","_className","_style","Component","defaultProps"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\n//import { PropTypes } from 'react'\r\n\r\nimport DialogCaption from './DialogCaption'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst CL = {\r\n  DIALOG: 'modal-dialog',\r\n  ACTIONS: 'md__actions',\r\n  SHOWING: 'show-popup',\r\n  HIDING: 'hide-popup'\r\n};\r\n\r\nconst S = {\r\n  SHOW: {\r\n    display: 'block'\r\n  },\r\n  HIDE: {\r\n    display: 'none'\r\n  },\r\n  HIDE_POPUP: {\r\n    opacity: 0,\r\n    transform: 'scaleY(0)'\r\n  },\r\n};\r\n\r\nclass ModalDialog extends Component {\r\n  /*\r\n   static propTypes = {\r\n     style: PropTypes.object,\r\n     caption: PropTypes.string,\r\n     isShow: PropTypes.bool,\r\n     isWithButton: PropTypes.bool,\r\n     isNotUpdate: PropTypes.bool,\r\n     withoutClose: PropTypes.bool,\r\n     isFocusClose: PropTypes.bool,\r\n     commandButtons: PropTypes.arrayOf(PropTypes.element),\r\n     timeout: PropTypes.number,\r\n     onClose: PropTypes.func\r\n   }\r\n   */\r\n   static defaultProps = {\r\n     className: '',\r\n     isWithButton: true,\r\n     isNotUpdate: false,\r\n     isFocusClose: true,\r\n     timeout: 450\r\n   }\r\n\r\n   constructor(props){\r\n     super(props)\r\n     this.wasClosing = false\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props){\r\n       if (nextProps.isNotUpdate){\r\n         return false;\r\n       }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   focusBtClose(){\r\n     if (this.props.isFocusClose && this._btClose) {\r\n       this._btClose.focus()\r\n     }\r\n   }\r\n\r\n   componentDidMount(){\r\n     this.focusBtClose()\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n    const { timeout, isShow } = this.props\r\n    if (prevProps.isShow && !isShow){\r\n       this.wasClosing = true\r\n       setTimeout(\r\n         () => { this.setState({}) },\r\n         timeout\r\n       )\r\n     }\r\n     if (prevProps.isShow === false && isShow) {\r\n       this.focusBtClose()\r\n     }\r\n   }\r\n\r\n\r\n  _hClickDialog = (event) => {\r\n     event.stopPropagation()\r\n   }\r\n\r\n  _refBtClose = n => this._btClose = n\r\n\r\n  _renderCommandButton = () => {\r\n    const {\r\n            commandButtons,\r\n            withoutClose,\r\n            onClose\r\n          } = this.props;\r\n    return (\r\n      <div className={CL.ACTIONS}>\r\n        {commandButtons}\r\n        { !withoutClose &&\r\n           <FlatButton\r\n             ref={this._refBtClose}\r\n             caption=\"Close\"\r\n             timeout={0}\r\n             onClick={onClose}\r\n           />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            className,\r\n            style,\r\n            isShow, isWithButton,\r\n            caption, captionStyle,\r\n            children,\r\n            onClose\r\n          } = this.props;\r\n\r\n    let _className, _style;\r\n\r\n    if (this.wasClosing){\r\n      _style = S.HIDE\r\n      this.wasClosing = false\r\n    } else {\r\n      _className = isShow\r\n          ? `${CL.DIALOG} ${className} ${CL.SHOWING}`\r\n          : `${CL.DIALOG} ${className} ${CL.HIDING}`\r\n      _style = isShow\r\n          ? S.SHOW\r\n          : S.HIDE_POPUP\r\n    }\r\n\r\n    return (\r\n         <div\r\n            role=\"dialog\"\r\n            className={_className}\r\n            style={{...style, ..._style}}\r\n            onClick={this._hClickDialog}\r\n         >\r\n            <DialogCaption\r\n               rootStyle={captionStyle}\r\n               caption={caption}\r\n               onClose={onClose}\r\n            />\r\n            <div>\r\n              {children}\r\n            </div>\r\n            { isWithButton && this._renderCommandButton() }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDialog\r\n"],"file":"ModalDialog.js"}