{"version":3,"sources":["../../../src/component/zhn-ch/DrawerLeft.jsx"],"names":["CL","DRAWER_BT","DRAWER_SPAN","DRAWER_SVG","DRAWER","DRAWER_MODAL","S","BT_DRAWER","width","height","DRAWER_OFF","transform","pointerEvents","DRAWER_ON","MODAL_OFF","opacity","zIndex","transition","MODAL_ON","DrawerLeft","state","isOpen","_hToggle","setState","prevState","render","props","btStyle","theme","captionComp","children","_drawerStyle","_drawerModalStyle","_onClickWrapper","undefined","TS","createStyle","styleConfig","COMP","Component"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA,IAAMA,EAAE,GAAG;AACTC,EAAAA,SAAS,EAAE,WADF;AAETC,EAAAA,WAAW,EAAE,aAFJ;AAGTC,EAAAA,UAAU,EAAE,YAHH;AAITC,EAAAA,MAAM,EAAE,aAJC;AAKTC,EAAAA,YAAY,EAAE;AALL,CAAX;AAQA,IAAMC,CAAC,GAAG;AACRC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE;AAFC,GADH;AAKRC,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE,oBADD;AAEV;AACAC,IAAAA,aAAa,EAAE;AAHL,GALJ;AAURC,EAAAA,SAAS,EAAE;AACTF,IAAAA,SAAS,EAAE;AADF,GAVH;AAaRG,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,CADA;AAETC,IAAAA,MAAM,EAAE,CAAC,CAFA;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAbH;AAkBRC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,OAAO,EAAE,CADD;AAERC,IAAAA,MAAM,EAAE,IAFA;AAGRC,IAAAA,UAAU,EAAE;AAHJ;AAlBF,CAAV;;IAyBME,U;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;;UAERC,Q,GAAW,YAAM;AACf,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BH,UAAAA,MAAM,EAAE,CAACG,SAAS,CAACH;AADO,SAAL;AAAA,OAAvB;AAGD,K;;;;;;;SAEDI,M,GAAA,kBAAQ;AAAA,sBAMD,KAAKC,KANJ;AAAA,QAEHC,OAFG,eAEHA,OAFG;AAAA,QAGHC,KAHG,eAGHA,KAHG;AAAA,QAIHC,WAJG,eAIHA,WAJG;AAAA,QAKHC,QALG,eAKHA,QALG;AAAA,QAOFT,MAPE,GAOS,KAAKD,KAPd,CAOFC,MAPE;AAAA,QAQJU,YARI,GAQWV,MAAM,GAChBf,CAAC,CAACO,SADc,GAEhBP,CAAC,CAACI,UAVH;AAAA,QAWJsB,iBAXI,GAWgBX,MAAM,GACrBf,CAAC,CAACY,QADmB,GAErBZ,CAAC,CAACQ,SAbH;AAAA,QAcJmB,eAdI,GAccZ,MAAM,GACnB,KAAKC,QADc,GAEnBY,SAhBD;AAAA,QAiBJC,EAjBI,GAiBCP,KAAK,CAACQ,WAAN,CAAkBC,gBAAlB,CAjBD;;AAkBN,WAAO,cACH;AAEE,MAAA,SAAS,EAAErC,EAAE,CAACC,SAFhB;AAGE,MAAA,KAAK,gCAAOK,CAAC,CAACC,SAAT,EAAuBoB,OAAvB,CAHP;AAIE,oBAAW,aAJb;AAKE,MAAA,OAAO,EAAE,KAAKL,QALhB;AAAA,gBAOGO;AAPH,OACM,WADN,CADG,eAUH;AAEE,qBAAa,CAACR,MAFhB;AAGE,MAAA,SAAS,EAAErB,EAAE,CAACK,YAHhB;AAIE,MAAA,KAAK,EAAE2B,iBAJT;AAKE,MAAA,OAAO,EAAEC;AALX,OACM,SADN,CAVG,eAiBH;AAEE,MAAA,SAAS,EAAEjC,EAAE,CAACI,MAFhB;AAGE,MAAA,KAAK,gCAAO2B,YAAP,EAAwBI,EAAE,CAACG,IAA3B,CAHP;AAAA,gBAKGR;AALH,OACM,OADN,CAjBG,CAAP;AAyBD,G;;;EApDsBS,gB;;eAuDV,2BAAUpB,UAAV,C","sourcesContent":["import { Component } from 'react'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../style/Comp.Style'\r\n\r\nconst CL = {\r\n  DRAWER_BT: 'drawer-bt',\r\n  DRAWER_SPAN: 'drawer-span',\r\n  DRAWER_SVG: 'drawer-svg',\r\n  DRAWER: 'drawer-left',\r\n  DRAWER_MODAL: 'drawer-modal',\r\n};\r\n\r\nconst S = {\r\n  BT_DRAWER: {\r\n    width: 'auto',\r\n    height: 'auto'\r\n  },\r\n  DRAWER_OFF: {\r\n    transform: 'translateX(-264px)',\r\n    //transform: 'translateX(264px)',\r\n    pointerEvents: 'none'\r\n  },\r\n  DRAWER_ON: {\r\n    transform: 'translate(0px, 0px)',\r\n  },\r\n  MODAL_OFF: {\r\n    opacity: 0,\r\n    zIndex: -1,\r\n    transition: 'opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  },\r\n  MODAL_ON: {\r\n    opacity: 1,\r\n    zIndex: 1000,\r\n    transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  }\r\n}\r\n\r\nclass DrawerLeft extends Component {\r\n  state = { isOpen: false }\r\n\r\n  _hToggle = () => {\r\n    this.setState(prevState => ({\r\n      isOpen: !prevState.isOpen\r\n    }))\r\n  }\r\n\r\n  render(){\r\n    const {\r\n       btStyle,\r\n       theme,\r\n       captionComp,\r\n       children\r\n     } = this.props\r\n    , { isOpen } = this.state\r\n    , _drawerStyle = isOpen\r\n         ? S.DRAWER_ON\r\n         : S.DRAWER_OFF\r\n    , _drawerModalStyle = isOpen\r\n         ? S.MODAL_ON\r\n         : S.MODAL_OFF\r\n    , _onClickWrapper = isOpen\r\n         ? this._hToggle\r\n         : undefined\r\n    , TS = theme.createStyle(styleConfig);\r\n    return [\r\n        <button\r\n          key=\"bt-drawer\"\r\n          className={CL.DRAWER_BT}\r\n          style={{ ...S.BT_DRAWER, ...btStyle }}\r\n          aria-label=\"Open Drawer\"\r\n          onClick={this._hToggle}\r\n        >\r\n          {captionComp}\r\n        </button>,\r\n        <div\r\n          key=\"wrapper\"\r\n          aria-hidden={!isOpen}\r\n          className={CL.DRAWER_MODAL}\r\n          style={_drawerModalStyle}\r\n          onClick={_onClickWrapper}\r\n        />,\r\n        <aside\r\n          key=\"aside\"\r\n          className={CL.DRAWER}\r\n          style={{ ..._drawerStyle, ...TS.COMP }}\r\n         >\r\n          {children}\r\n        </aside>\r\n      ];\r\n  }\r\n}\r\n\r\nexport default withTheme(DrawerLeft)\r\n"],"file":"DrawerLeft.js"}