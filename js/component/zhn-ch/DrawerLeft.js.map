{"version":3,"sources":["../../../src/component/zhn-ch/DrawerLeft.jsx"],"names":["CL","DRAWER_BT","DRAWER_SPAN","DRAWER_SVG","DRAWER","DRAWER_MODAL","S","BT_DRAWER","width","height","DRAWER_OFF","transform","pointerEvents","DRAWER_ON","MODAL_OFF","opacity","zIndex","transition","MODAL_ON","DrawerLeft","btStyle","captionComp","children","isOpen","toggleIsOpen","TS","styleConfig","_drawerStyle","_drawerModalStyle","_onClickWrapper","COMP"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;AAEA,IAAMA,EAAE,GAAG;AACTC,EAAAA,SAAS,EAAE,WADF;AAETC,EAAAA,WAAW,EAAE,aAFJ;AAGTC,EAAAA,UAAU,EAAE,YAHH;AAITC,EAAAA,MAAM,EAAE,aAJC;AAKTC,EAAAA,YAAY,EAAE;AALL,CAAX;AAQA,IAAMC,CAAC,GAAG;AACRC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE;AAFC,GADH;AAKRC,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE,oBADD;AAEV;AACAC,IAAAA,aAAa,EAAE;AAHL,GALJ;AAURC,EAAAA,SAAS,EAAE;AACTF,IAAAA,SAAS,EAAE;AADF,GAVH;AAaRG,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,CADA;AAETC,IAAAA,MAAM,EAAE,CAAC,CAFA;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAbH;AAkBRC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,OAAO,EAAE,CADD;AAERC,IAAAA,MAAM,EAAE,IAFA;AAGRC,IAAAA,UAAU,EAAE;AAHJ;AAlBF,CAAV;;AAyBA,IAAME,UAAU,GAAG,SAAbA,UAAa,OAIb;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,mBAA+B,4BAAU,KAAV,CAA/B;AAAA,MAAOC,MAAP;AAAA,MAAeC,YAAf;AAAA,MACEC,EADF,GACO,0BAASC,gBAAT,CADP;AAAA,MAEEC,YAFF,GAEiBJ,MAAM,GAChBjB,CAAC,CAACO,SADc,GAEhBP,CAAC,CAACI,UAJT;AAAA,MAKEkB,iBALF,GAKsBL,MAAM,GACrBjB,CAAC,CAACY,QADmB,GAErBZ,CAAC,CAACQ,SAPT;AAAA,MAQEe,eARF,GAQoBN,MAAM,GACnBC,YADmB,GAEnB,KAAK,CAVZ;;AAYA,SAAO,cACH;AAEE,IAAA,SAAS,EAAExB,EAAE,CAACC,SAFhB;AAGE,IAAA,KAAK,gCAAOK,CAAC,CAACC,SAAT,EAAuBa,OAAvB,CAHP;AAIE,kBAAW,aAJb;AAKE,IAAA,OAAO,EAAEI,YALX;AAAA,cAOGH;AAPH,KACM,WADN,CADG,eAUH;AAEE,mBAAa,CAACE,MAFhB;AAGE,IAAA,SAAS,EAAEvB,EAAE,CAACK,YAHhB;AAIE,IAAA,KAAK,EAAEuB,iBAJT;AAKE,IAAA,OAAO,EAAEC;AALX,KACM,SADN,CAVG,eAiBH;AAEE,IAAA,SAAS,EAAE7B,EAAE,CAACI,MAFhB;AAGE,IAAA,KAAK,gCAAOuB,YAAP,EAAwBF,EAAE,CAACK,IAA3B,CAHP;AAAA,cAKGR;AALH,KACM,OADN,CAjBG,CAAP;AAyBD,CA1CD;;eA4CeH,U","sourcesContent":["import useToggle from '../hooks/useToggle'\r\nimport useTheme from '../hooks/useTheme'\r\n\r\nimport styleConfig from '../style/Comp.Style'\r\n\r\nconst CL = {\r\n  DRAWER_BT: 'drawer-bt',\r\n  DRAWER_SPAN: 'drawer-span',\r\n  DRAWER_SVG: 'drawer-svg',\r\n  DRAWER: 'drawer-left',\r\n  DRAWER_MODAL: 'drawer-modal',\r\n};\r\n\r\nconst S = {\r\n  BT_DRAWER: {\r\n    width: 'auto',\r\n    height: 'auto'\r\n  },\r\n  DRAWER_OFF: {\r\n    transform: 'translateX(-264px)',\r\n    //transform: 'translateX(264px)',\r\n    pointerEvents: 'none'\r\n  },\r\n  DRAWER_ON: {\r\n    transform: 'translate(0px, 0px)',\r\n  },\r\n  MODAL_OFF: {\r\n    opacity: 0,\r\n    zIndex: -1,\r\n    transition: 'opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  },\r\n  MODAL_ON: {\r\n    opacity: 1,\r\n    zIndex: 1000,\r\n    transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  }\r\n}\r\n\r\nconst DrawerLeft = ({\r\n  btStyle,\r\n  captionComp,\r\n  children\r\n}) => {\r\n  const [isOpen, toggleIsOpen] = useToggle(false)\r\n  , TS = useTheme(styleConfig)\r\n  , _drawerStyle = isOpen\r\n       ? S.DRAWER_ON\r\n       : S.DRAWER_OFF\r\n  , _drawerModalStyle = isOpen\r\n       ? S.MODAL_ON\r\n       : S.MODAL_OFF\r\n  , _onClickWrapper = isOpen\r\n       ? toggleIsOpen\r\n       : void 0;\r\n\r\n  return [\r\n      <button\r\n        key=\"bt-drawer\"\r\n        className={CL.DRAWER_BT}\r\n        style={{ ...S.BT_DRAWER, ...btStyle }}\r\n        aria-label=\"Open Drawer\"\r\n        onClick={toggleIsOpen}\r\n      >\r\n        {captionComp}\r\n      </button>,\r\n      <div\r\n        key=\"wrapper\"\r\n        aria-hidden={!isOpen}\r\n        className={CL.DRAWER_MODAL}\r\n        style={_drawerModalStyle}\r\n        onClick={_onClickWrapper}\r\n      />,\r\n      <aside\r\n        key=\"aside\"\r\n        className={CL.DRAWER}\r\n        style={{ ..._drawerStyle, ...TS.COMP }}\r\n       >\r\n        {children}\r\n      </aside>\r\n    ];\r\n}\r\n\r\nexport default DrawerLeft\r\n"],"file":"DrawerLeft.js"}