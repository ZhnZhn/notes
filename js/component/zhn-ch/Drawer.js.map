{"version":3,"sources":["../../../src/component/zhn-ch/Drawer.jsx"],"names":["CL","DRAWER_BT","DRAWER_SPAN","DRAWER_SVG","DRAWER","DRAWER_MODAL","S","BT_DRAWER","position","top","right","DRAWER_OFF","transform","pointerEvents","DRAWER_ON","MODAL_OFF","opacity","zIndex","transition","MODAL_ON","Drawer","state","isOpen","_hToggle","setState","prevState","render","props","btStyle","theme","children","_drawerStyle","_drawerModalStyle","_onClickWrapper","undefined","TS","createStyle","styleConfig","COMP","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../style/Comp.Style'\r\n\r\nconst CL = {\r\n  DRAWER_BT: 'drawer-bt',\r\n  DRAWER_SPAN: 'drawer-span',\r\n  DRAWER_SVG: 'drawer-svg',\r\n  DRAWER: 'drawer',\r\n  DRAWER_MODAL: 'drawer-modal',\r\n};\r\n\r\nconst S = {\r\n  BT_DRAWER: {\r\n    position: 'absolute',\r\n    top: 4,\r\n    right: 16\r\n  },\r\n  DRAWER_OFF: {\r\n    //transform: 'translateX(-264px)',\r\n    transform: 'translateX(264px)',\r\n    pointerEvents: 'none'\r\n  },\r\n  DRAWER_ON: {\r\n    transform: 'translate(0px, 0px)',\r\n  },\r\n  MODAL_OFF: {\r\n    opacity: 0,\r\n    zIndex: -1,\r\n    transition: 'opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  },\r\n  MODAL_ON: {\r\n    opacity: 1,\r\n    zIndex: 1000,\r\n    transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  }\r\n}\r\n\r\nclass Drawer extends Component {\r\n  state = { isOpen: false }\r\n\r\n  _hToggle = () => {\r\n    this.setState(prevState => ({\r\n      isOpen: !prevState.isOpen\r\n    }))\r\n  }\r\n\r\n  render(){\r\n    const {\r\n       btStyle,\r\n       theme,\r\n       children\r\n     } = this.props\r\n    , { isOpen } = this.state\r\n    , _drawerStyle = isOpen\r\n         ? S.DRAWER_ON\r\n         : S.DRAWER_OFF\r\n    , _drawerModalStyle = isOpen\r\n         ? S.MODAL_ON\r\n         : S.MODAL_OFF\r\n    , _onClickWrapper = isOpen\r\n         ? this._hToggle\r\n         : undefined\r\n    , TS = theme.createStyle(styleConfig);\r\n    return [\r\n        <button\r\n          key=\"bt-drawer\"\r\n          className={CL.DRAWER_BT}\r\n          style={{ ...S.BT_DRAWER, ...btStyle }}\r\n          aria-label=\"Open Drawer\"\r\n          onClick={this._hToggle}\r\n        >\r\n          <span className={CL.DRAWER_SPAN}>\r\n            <svg\r\n               className={CL.DRAWER_SVG}\r\n               focusable=\"false\"\r\n               viewBox=\"0 0 24 24\"\r\n               aria-hidden=\"true\"\r\n            >\r\n              <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\r\n            </svg>\r\n          </span>\r\n        </button>,\r\n        <div\r\n          key=\"wrapper\"\r\n          aria-hidden={!isOpen}\r\n          className={CL.DRAWER_MODAL}\r\n          style={_drawerModalStyle}\r\n          onClick={_onClickWrapper}\r\n        />,\r\n        <aside\r\n          key=\"aside\"\r\n          className={CL.DRAWER}\r\n          style={{ ..._drawerStyle, ...TS.COMP }}\r\n         >\r\n          {children}\r\n        </aside>\r\n      ];\r\n  }\r\n}\r\n\r\nexport default withTheme(Drawer)\r\n"],"file":"Drawer.js"}