{"version":3,"sources":["../../../src/component/zhn-ch/CellColor.jsx"],"names":["CellColor","_refCellNode","node","cellNode","componentDidMount","onReg","props","render","tabIndex","style","color","onClick","children","_styleColor","backgroundColor","undefined","_onClick","bind","Component","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;IAEMA,S;;;;;;;;;;;;UAqBJC,Y,GAAe,UAAAC,IAAI;AAAA,aAAI,MAAKC,QAAL,GAAgBD,IAApB;AAAA,K;;;;;;;SAPnBE,iB,GAAA,6BAAmB;AAAA,QACRC,KADQ,GACE,KAAKC,KADP,CACRD,KADQ;;AAEhB,QAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/BA,MAAAA,KAAK,CAAC,KAAKF,QAAN,CAAL;AACD;AACH,G;;SAIDI,M,GAAA,kBAAQ;AAAA,sBAOI,KAAKD,KAPT;AAAA,QAEEE,QAFF,eAEEA,QAFF;AAAA,QAGEC,KAHF,eAGEA,KAHF;AAAA,QAIEC,KAJF,eAIEA,KAJF;AAAA,QAKEC,OALF,eAKEA,OALF;AAAA,QAMEC,QANF,eAMEA,QANF;AAAA,QAQAC,WARA,GAQcH,KAAK,GACd;AAAEI,MAAAA,eAAe,EAAEJ;AAAnB,KADc,GAEdK,SAVL;AAAA,QAWAC,QAXA,GAWWL,OAAO,GACZA,OAAO,CAACM,IAAR,CAAa,IAAb,EAAmBP,KAAnB,CADY,GAEZK,SAbN;;AAcN,wBACE;AACG,MAAA,GAAG,EAAE,KAAKd,YADb;AAEG,MAAA,QAAQ,EAAEO,QAFb;AAGG,MAAA,KAAK,gCAAOC,KAAP,EAAiBI,WAAjB,CAHR;AAIG,MAAA,OAAO,EAAEG;AAJZ,OAMIJ,QANJ,CADF;AAUD,G;;;EA/CqBM,gB;;AAAlBlB,S,CAUGmB,Y,GAAe;AACpBX,EAAAA,QAAQ,EAAE;AADU,C;eAyCTR,S","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nclass CellColor extends Component {\r\n  /*\r\n  static propTypes = {\r\n    tabIndex: PropTypes.string,\r\n    style: PropTypes.object,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onReg: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    tabIndex: '-1'\r\n  }\r\n\r\n  componentDidMount(){\r\n     const { onReg } = this.props;\r\n     if (typeof onReg === 'function') {\r\n       onReg(this.cellNode)\r\n     }\r\n  }\r\n\r\n  _refCellNode = node => this.cellNode = node\r\n\r\n  render(){\r\n    const {\r\n            tabIndex,\r\n            style,\r\n            color,\r\n            onClick,\r\n            children\r\n          } = this.props\r\n        , _styleColor = color\r\n             ? { backgroundColor: color }\r\n             : undefined\r\n        , _onClick = onClick\r\n              ? onClick.bind(null, color)\r\n              : undefined;\r\n    return (\r\n      <button\r\n         ref={this._refCellNode}\r\n         tabIndex={tabIndex}\r\n         style={{ ...style, ..._styleColor}}\r\n         onClick={_onClick}\r\n      >\r\n         {children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CellColor\r\n"],"file":"CellColor.js"}