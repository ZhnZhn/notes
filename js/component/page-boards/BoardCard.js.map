{"version":3,"sources":["../../../src/component/page-boards/BoardCard.jsx"],"names":["S","LINK","marginTop","marginLeft","marginBottom","BoardCard","_hBlurTitle","evt","props","board","editBoardTitle","id","target","value","_hSetCurrent","setBoardCurrent","_hRemove","removeBoard","_hToNotes","render","columns","columnIds","title","length","CL","NAV_LINK","CARD_BT","Component","mapStateToProps","state","ownProps","sBoard","sColumn","mapDispatchToProps"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAKA;;AAEA;;AAEA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,CAAC,GAAI;AACTC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,CADP;AAEJC,IAAAA,UAAU,EAAE,CAFR;AAGJC,IAAAA,YAAY,EAAE;AAHV;AADG,CAAX;;IAQMC,S;;;;;;;;;;;;UAEJC,W,GAAc,UAACC,GAAD,EAAS;AAAA,wBACa,MAAKC,KADlB;AAAA,UACbC,KADa,eACbA,KADa;AAAA,UACNC,cADM,eACNA,cADM;AAErBA,MAAAA,cAAc,CAACD,KAAK,CAACE,EAAP,EAAWJ,GAAG,CAACK,MAAJ,CAAWC,KAAtB,CAAd;AACD,K;;UAEDC,Y,GAAe,YAAM;AAAA,yBACgB,MAAKN,KADrB;AAAA,UACXC,KADW,gBACXA,KADW;AAAA,UACJM,eADI,gBACJA,eADI;AAEnBA,MAAAA,eAAe,CAACN,KAAK,CAACE,EAAP,CAAf;AACD,K;;UAEDK,Q,GAAW,YAAM;AAAA,yBACgB,MAAKR,KADrB;AAAA,UACPC,KADO,gBACPA,KADO;AAAA,UACAQ,WADA,gBACAA,WADA;AAEfA,MAAAA,WAAW,CAACR,KAAK,CAACE,EAAP,CAAX;AACD,K;;UAEDO,S,GAAY,YAAM;AAAA,yBACmB,MAAKV,KADxB;AAAA,UACRC,KADQ,gBACRA,KADQ;AAAA,UACDM,eADC,gBACDA,eADC;AAEhBA,MAAAA,eAAe,CAACN,KAAK,CAACE,EAAP,CAAf;AACD,K;;;;;;;SAEDQ,M,GAAA,kBAAQ;AAAA,uBACyB,KAAKX,KAD9B;AAAA,QACEG,EADF,gBACEA,EADF;AAAA,QACMF,KADN,gBACMA,KADN;AAAA,QACaW,OADb,gBACaA,OADb;AAAA,QAEEC,SAFF,GAEgBZ,KAFhB,CAEEY,SAFF;AAIN,wBACE,gCAAC,gBAAD,CAAM,IAAN,qBACE,gCAAC,gBAAD,CAAM,KAAN;AACE,MAAA,KAAK,EAAEZ,KAAK,CAACa,KADf;AAEE,MAAA,MAAM,EAAE,KAAKhB;AAFf,MADF,eAKE,gCAAC,gBAAD,CAAM,OAAN;AACE,MAAA,KAAK,EAAEe,SAAS,CAACE;AADnB,MALF,eAQE,gCAAC,wBAAD;AACE,MAAA,EAAE,EAAEZ,EADN;AAEE,MAAA,SAAS,EAAEU,SAFb;AAGE,MAAA,OAAO,EAAED;AAHX,MARF,eAaE,gCAAC,uBAAD;AACE,MAAA,EAAE,eAAaX,KAAK,CAACE,EADvB;AAEE,MAAA,SAAS,EAAEa,eAAGC,QAFhB;AAGE,MAAA,KAAK,EAAEzB,CAAC,CAACC,IAHX;AAIE,MAAA,OAAO,EAAE,KAAKiB;AAJhB,iBAbF,eAqBE,6CAEE,4BAAWG,SAAX,kBACE,gCAAC,sBAAD;AACE,MAAA,SAAS,EAAEG,eAAGE,OADhB;AAEE,MAAA,OAAO,EAAC,cAFV;AAGE,MAAA,OAAO,EAAE,KAAKV;AAHhB,MAHJ,CArBF,CADF;AAkCD,G;;;EA5DqBW,gB;;AA+DxB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAsB;AAC5CrB,IAAAA,KAAK,EAAEsB,kBAAOtB,KAAP,CAAaoB,KAAb,EAAoBC,QAAQ,CAACnB,EAA7B,CADqC;AAE5CS,IAAAA,OAAO,EAAEY,mBAAQZ,OAAR,CAAgBS,KAAhB;AAFmC,GAAtB;AAAA,CAAxB;;AAKA,IAAMI,kBAAkB,GAAG;AACzBvB,EAAAA,cAAc,EAAdA,uBADyB;AAEzBK,EAAAA,eAAe,EAAfA,wBAFyB;AAGzBE,EAAAA,WAAW,EAAXA;AAHyB,CAA3B;;eAMe,yBACbW,eADa,EAEbK,kBAFa,EAGb5B,SAHa,C","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  editBoardTitle,\r\n  setBoardCurrent,\r\n  removeBoard\r\n} from '../../flux/board/actions'\r\nimport { sBoard, sColumn } from '../../flux/selectors'\r\n\r\nimport CL from '../style/CL'\r\n\r\nimport isArrEmpty from '../../utils/isArrEmpty'\r\n\r\nimport Card from '../zhn-card/Card'\r\nimport DnDTopicList from './DnDTopicList'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst S  = {\r\n  LINK: {\r\n    marginTop: 8,\r\n    marginLeft: 8,\r\n    marginBottom: 4\r\n  }\r\n};\r\n\r\nclass BoardCard extends Component {\r\n\r\n  _hBlurTitle = (evt) => {\r\n    const { board, editBoardTitle } = this.props;\r\n    editBoardTitle(board.id, evt.target.value)\r\n  }\r\n\r\n  _hSetCurrent = () => {\r\n    const { board, setBoardCurrent } = this.props\r\n    setBoardCurrent(board.id)\r\n  }\r\n\r\n  _hRemove = () => {\r\n    const { board, removeBoard } = this.props\r\n    removeBoard(board.id)\r\n  }\r\n\r\n  _hToNotes = () => {\r\n    const { board, setBoardCurrent } = this.props;\r\n    setBoardCurrent(board.id)\r\n  }\r\n\r\n  render(){\r\n    const { id, board, columns } = this.props\r\n        , { columnIds } = board;\r\n\r\n    return (\r\n      <Card.Item>\r\n        <Card.Title\r\n          value={board.title}\r\n          onBlur={this._hBlurTitle}\r\n        />\r\n        <Card.Counter\r\n          value={columnIds.length}\r\n        />\r\n        <DnDTopicList\r\n          id={id}\r\n          columnIds={columnIds}\r\n          columns={columns}\r\n        />\r\n        <NavLink\r\n          to={`/boards/${board.id}`}\r\n          className={CL.NAV_LINK}\r\n          style={S.LINK}\r\n          onClick={this._hToNotes}\r\n        >\r\n          ToNotes\r\n        </NavLink>\r\n        <div>\r\n        {\r\n          isArrEmpty(columnIds) &&\r\n            <FlatButton\r\n              clCaption={CL.CARD_BT}\r\n              caption=\"Remove Board\"\r\n              onClick={this._hRemove}\r\n            />\r\n        }\r\n        </div>\r\n     </Card.Item>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  board: sBoard.board(state, ownProps.id),\r\n  columns: sColumn.columns(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  editBoardTitle,\r\n  setBoardCurrent,\r\n  removeBoard\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BoardCard)\r\n"],"file":"BoardCard.js"}