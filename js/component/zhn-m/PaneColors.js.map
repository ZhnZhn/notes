{"version":3,"sources":["../../../src/component/zhn-m/PaneColors.jsx"],"names":["C_DF","COLORS1","COLORS2","S","ROOT","paddingBottom","ROW2","paddingLeft","paddingTop","TO_CELL","marginLeft","marginRight","CELL","position","display","height","width","borderRadius","verticalAlign","boxShadow","_initColor","props","initColor","PaneColors","_hInit","setState","color","_hClick","_renderColors","colors","isLong","map","c","state","componentDidMount","onReg","render","getColor","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport CellColor from '../zhn-ch/CellColor'\r\n\r\nconst C_DF = '#2f7ed8';\r\nconst COLORS1 = [\r\n  '#8abb5d','#f7a35c','#795548',\r\n  '#f45b5b','#d2b772', '#dda0dd'\r\n];\r\nconst COLORS2 = [\r\n  '#f1d600','#008b8b','#2f7ed8',\r\n  '#000000','#607d8b','#7092be'\r\n];\r\n\r\nconst S = {\r\n  ROOT: {\r\n    paddingBottom: 4\r\n  },\r\n  ROW2: {\r\n    paddingLeft: 56,\r\n    paddingTop: 4\r\n  },\r\n  TO_CELL: {\r\n    marginLeft: 12,\r\n    marginRight: 12,\r\n  },\r\n  CELL: {\r\n  marginRight: 4,\r\n  position: 'relative',\r\n  display: 'inline-block',\r\n  height: 32,\r\n  width: 32,\r\n  borderRadius: 2,\r\n  verticalAlign: 'bottom',\r\n  boxShadow: '0 2px 2px 0 rgba(0,0,0,0.3), 0 0 0 1px rgba(0,0,0,0.1)'\r\n  }\r\n};\r\n\r\nconst _initColor = (props) => props.initColor || C_DF;\r\n\r\nclass PaneColors extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      color: _initColor(props)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onReg } = this.props;\r\n    if (typeof onReg === 'function'){\r\n      onReg(this)\r\n    }\r\n  }\r\n\r\n  _hInit = () => {\r\n    this.setState({\r\n      color: _initColor(this.props)\r\n    })\r\n  }\r\n\r\n  _hClick = (color) => {\r\n     if (color) {\r\n       this.setState({ color })\r\n     }\r\n  }\r\n\r\n  _renderColors = (colors, isLong) => {\r\n    return colors.map(c => (\r\n      <CellColor\r\n        key={c}\r\n        color={c}\r\n        style={S.CELL}\r\n        onClick={this._hClick}\r\n      />\r\n    ));\r\n   }\r\n  \r\n  render(){\r\n    const { color } = this.state;\r\n    return (\r\n      <div style={S.ROOT}>\r\n        <div>\r\n          <CellColor\r\n            color={color}\r\n            style={{ ...S.CELL, ...S.TO_CELL }}\r\n            onClick={this._hInit}\r\n          />\r\n          {this._renderColors(COLORS1)}\r\n        </div>\r\n        <div style={S.ROW2}>\r\n          {this._renderColors(COLORS2)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getColor(){\r\n    return this.state.color;\r\n  }\r\n}\r\n\r\nexport default PaneColors\r\n"],"file":"PaneColors.js"}