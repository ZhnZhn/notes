{"version":3,"sources":["../../../src/component/d-details/TabLabels.jsx"],"names":["toTitle","fn","addLabel","removeLabel","S","LABELS","paddingTop","paddingLeft","paddingBottom","BT_ADD","marginLeft","TabLabels","props","_focusBtClose","isSelected","_buttons","focusBtClose","_onBlurLabel","evt","_label","target","value","_onAddLabel","setState","prevState","_inputColor","getColor","_inputLabel","setValue","_onRemoveLabel","label","_saveLabels","note","dispatch","na","editNoteLabels","id","state","labels","_refInputLabel","node","_refInputColor","_refButtons","componentDidMount","render","onClose","CL","CARD_BT","MD_ACTIONS","componentDidUpdate","prevProps","Component"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\n\r\nimport na from '../../flux/note/actions'\r\n\r\nimport LabelList from './LabelList'\r\nimport InputText from '../zhn/InputText'\r\nimport PaneColors from '../zhn-m/PaneColors'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\nimport DialogButtons from './DialogButtons'\r\n\r\nimport fn from './fnTabLabels'\r\n\r\nconst {\r\n  toTitle,\r\n  addLabel,\r\n  removeLabel\r\n } = fn;\r\n\r\nimport CL from '../style/CL'\r\n\r\nconst S = {\r\n  LABELS: {\r\n    paddingTop: 4,\r\n    paddingLeft: 12,\r\n    paddingBottom: 8\r\n  },\r\n  BT_ADD: {\r\n    marginLeft: 16\r\n  }\r\n};\r\n\r\n\r\nclass TabLabels extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      labels: props.note.labels || []\r\n    }\r\n  }\r\n\r\n  _focusBtClose = () => {\r\n    if (this.props.isSelected\r\n      && this._buttons) {\r\n       this._buttons.focusBtClose()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._focusBtClose()\r\n  }\r\n\r\n  _onBlurLabel = (evt) => {\r\n    this._label = evt.target.value\r\n  }\r\n  _onAddLabel = () => {\r\n    this.setState(prevState => addLabel(\r\n      prevState,\r\n      toTitle(this._label),\r\n      this._inputColor.getColor()\r\n    ), () => this._inputLabel.setValue(''))\r\n  }\r\n  _onRemoveLabel = (label) => {\r\n    this.setState(prevState => removeLabel(\r\n      prevState,\r\n      label\r\n    ))\r\n  }\r\n  _saveLabels = () => {\r\n    const { note, dispatch } = this.props;\r\n    dispatch(na.editNoteLabels(\r\n      note.id, this.state.labels\r\n    ))\r\n  }\r\n\r\n  _refInputLabel = (node) => this._inputLabel = node\r\n  _refInputColor = (node) => this._inputColor = node\r\n  _refButtons = (node) => this._buttons = node\r\n\r\n  render(){\r\n    const {\r\n      //note,\r\n      onClose\r\n    } = this.props\r\n    , { labels } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div style={S.LABELS}>\r\n          <LabelList\r\n            labels={labels}\r\n            onRemove={this._onRemoveLabel}\r\n          />\r\n          <InputText\r\n            ref={this._refInputLabel}\r\n            onBlur={this._onBlurLabel}\r\n          />\r\n          <FlatButton\r\n            clCaption={CL.CARD_BT}\r\n            rootStyle={S.BT_ADD}\r\n            caption=\"AddLabel\"\r\n            title=\"Click to add a new label\"\r\n            timeout={400}\r\n            onClick={this._onAddLabel}\r\n          />\r\n        </div>\r\n        <PaneColors\r\n          ref={this._refInputColor}\r\n        />\r\n        <DialogButtons\r\n          ref={this._refButtons}\r\n          className={CL.MD_ACTIONS}\r\n          onSave={this._saveLabels}\r\n          onClose={onClose}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps\r\n    && this.props.isSelected) {\r\n      this._focusBtClose()\r\n    }\r\n  }\r\n}\r\n\r\nexport default TabLabels\r\n"],"file":"TabLabels.js"}