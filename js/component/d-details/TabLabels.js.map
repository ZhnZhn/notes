{"version":3,"sources":["../../../src/component/d-details/TabLabels.jsx"],"names":["toTitle","fn","addLabel","removeLabel","S","LABELS","paddingTop","paddingLeft","paddingBottom","BT_ADD","marginLeft","_getCurrent","ref","current","TabLabels","props","isSelected","note","dispatch","onClose","id","labels","setLabels","_refBtClose","_refLabel","_refInputLabel","_refInputColor","_onBlurLabel","evt","target","value","_onAddLabel","prevState","getColor","setValue","_onRemoveLabel","label","_saveLabels","na","editNoteLabels","_btClose","focus","CL","CARD_BT","MD_ACTIONS"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react'\r\n\r\nimport na from '../../flux/note/actions'\r\n\r\nimport LabelList from './LabelList'\r\nimport InputText from '../zhn/InputText'\r\nimport PaneColors from '../zhn-m/PaneColors'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\nimport DialogButtons from './DialogButtons'\r\n\r\nimport fn from './fnTabLabels'\r\n\r\nconst {\r\n  toTitle,\r\n  addLabel,\r\n  removeLabel\r\n } = fn;\r\n\r\nimport CL from '../style/CL'\r\n\r\nconst S = {\r\n  LABELS: {\r\n    paddingTop: 4,\r\n    paddingLeft: 12,\r\n    paddingBottom: 8\r\n  },\r\n  BT_ADD: {\r\n    marginLeft: 16\r\n  }\r\n};\r\n\r\nconst _getCurrent = ref => ref.current;\r\n\r\nconst TabLabels = (props) => {\r\n  const {\r\n    isSelected,\r\n    note,\r\n    dispatch,\r\n    onClose\r\n  } = props\r\n  , { id } = note\r\n  , [ labels, setLabels] = useState(() => note.labels || [])\r\n  , _refBtClose = useRef(null)\r\n  , _refLabel = useRef('')\r\n  , _refInputLabel = useRef(null)\r\n  , _refInputColor = useRef(null)\r\n  , _onBlurLabel = useCallback(evt => {\r\n     _refLabel.current = evt.target.value\r\n  }, [])\r\n  , _onAddLabel = useCallback(() => {\r\n    setLabels(prevState => addLabel(\r\n      prevState,\r\n      toTitle(_getCurrent(_refLabel)),\r\n      _refInputColor.current.getColor()\r\n    ), _refInputLabel.current.setValue(''))\r\n  }, [])\r\n  , _onRemoveLabel = useCallback(label => {\r\n     setLabels(prevState => removeLabel(\r\n       prevState,\r\n       label\r\n     ))\r\n  }, [])\r\n  , _saveLabels = useCallback(() => {\r\n    dispatch(na.editNoteLabels(id, labels))\r\n  }, [id, labels]);\r\n  //dispatch\r\n\r\n  useEffect(() => {\r\n    const _btClose = _refBtClose.current;\r\n    if (isSelected && _btClose) {\r\n       _btClose.focus()\r\n    }\r\n  }, [props])\r\n  //isSelected\r\n\r\n  return (\r\n      <>\r\n        <div style={S.LABELS}>\r\n          <LabelList\r\n            labels={labels}\r\n            onRemove={_onRemoveLabel}\r\n          />\r\n          <InputText\r\n            ref={_refInputLabel}\r\n            onBlur={_onBlurLabel}\r\n          />\r\n          <FlatButton\r\n            clCaption={CL.CARD_BT}\r\n            rootStyle={S.BT_ADD}\r\n            caption=\"AddLabel\"\r\n            title=\"Click to add a new label\"\r\n            timeout={400}\r\n            onClick={_onAddLabel}\r\n          />\r\n        </div>\r\n        <PaneColors\r\n          ref={_refInputColor}\r\n        />\r\n        <DialogButtons\r\n          refBtClose={_refBtClose}\r\n          className={CL.MD_ACTIONS}\r\n          onSave={_saveLabels}\r\n          onClose={onClose}\r\n        />\r\n      </>\r\n  );\r\n}\r\n\r\n\r\nexport default TabLabels\r\n"],"file":"TabLabels.js"}