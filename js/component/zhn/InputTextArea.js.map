{"version":3,"sources":["../../../src/component/zhn/InputTextArea.jsx"],"names":["InputTextArea","props","_hChange","evt","setState","value","target","_hKeyDown","_refInputNode","node","_inputNode","state","initValue","render","className","style","maxLength","getValue","focus","Component","defaultProps"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;IAEMA,a;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AAME,yBAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN;;AADgB,UAOlBC,QAPkB,GAOP,UAACC,GAAD,EAAS;AAClB,YAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,GAAG,CAACG,MAAJ,CAAWD;AADN,OAAd;AAGD,KAXiB;;AAAA,UAYlBE,SAZkB,GAYN,UAACJ,GAAD,EAAS;AACnB,UAAI,6BAAYA,GAAZ,CAAJ,EAAsB;AACpB,cAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,KAhBiB;;AAAA,UAkBlBG,aAlBkB,GAkBF,UAACC,IAAD;AAAA,aAAU,MAAKC,UAAL,GAAkBD,IAA5B;AAAA,KAlBE;;AAEhB,UAAKE,KAAL,GAAa;AACXN,MAAAA,KAAK,EAAEJ,KAAK,CAACW;AADF,KAAb;AAFgB;AAKjB;;;;SAeDC,M,GAAA,kBAAQ;AACN,sBAII,KAAKZ,KAJT;AAAA,QACEa,SADF,eACEA,SADF;AAAA,QAEEC,KAFF,eAEEA,KAFF;AAAA,QAGEC,SAHF,eAGEA,SAHF;AAKA,QAAQX,KAAR,GAAkB,KAAKM,KAAvB,CAAQN,KAAR;AACA,wBACE;AACE,MAAA,GAAG,EAAE,KAAKG,aADZ;AAEE,MAAA,SAAS,EAAEM,SAFb;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,KAAK,EAAEV,KAJT;AAKE,MAAA,SAAS,EAAEW,SALb;AAME,MAAA,QAAQ,EAAE,KAAKd,QANjB;AAOE,MAAA,SAAS,EAAE,KAAKK;AAPlB,MADF;AAWD,G;;SAEDU,Q,GAAA,oBAAW;AACT,WAAO,KAAKN,KAAL,CAAWN,KAAlB;AACD,G;;SACDa,K,GAAA,iBAAO;AACL,QAAI,KAAKR,UAAL,IACC,KAAKA,UAAL,CAAgBQ,KADrB,EAC4B;AAC3B,WAAKR,UAAL,CAAgBQ,KAAhB;AACA;AACF,G;;;EA7DyBC,gB;;AAAtBnB,a,CASGoB,Y,GAAe;AACpBR,EAAAA,SAAS,EAAE;AADS,C;eAwDTZ,a","sourcesContent":["import { Component } from 'react'\r\n\r\nimport isKeyDelete from './isKeyDelete';\r\n\r\nclass InputTextArea extends Component {\r\n  /*\r\n  static propTypes = {\r\n    className: PropsType.string\r\n    style: PropsType.object,\r\n    initValue: PropsType.string\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    initValue: ''\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      value: props.initValue\r\n    }\r\n  }\r\n\r\n  _hChange = (evt) => {\r\n    this.setState({\r\n      value: evt.target.value\r\n    })\r\n  }\r\n  _hKeyDown = (evt) => {\r\n    if (isKeyDelete(evt)) {\r\n      this.setState({ value: '' })\r\n    }\r\n  }\r\n\r\n  _refInputNode = (node) => this._inputNode = node\r\n\r\n  render(){\r\n    const {\r\n      className,\r\n      style,\r\n      maxLength\r\n    } = this.props;\r\n    const { value } = this.state;\r\n    return (\r\n      <textarea\r\n        ref={this._refInputNode}\r\n        className={className}\r\n        style={style}\r\n        value={value}\r\n        maxLength={maxLength}\r\n        onChange={this._hChange}\r\n        onKeyDown={this._hKeyDown}\r\n      />\r\n    );\r\n  }\r\n\r\n  getValue() {\r\n    return this.state.value;\r\n  }\r\n  focus(){\r\n    if (this._inputNode\r\n      && this._inputNode.focus) {\r\n     this._inputNode.focus()\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default InputTextArea\r\n"],"file":"InputTextArea.js"}